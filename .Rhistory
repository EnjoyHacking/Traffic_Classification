geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = 1) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = 2) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = 2) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = 3) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = 2) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = 4) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = 2) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = 5) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = 2) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = 6) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
?color
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red") +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = "green") +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red") +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = "lightblue") +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = 2) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = "lightblue") +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = 1.5) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = "lightblue") +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = 1) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = "lightblue") +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = .8, alpha = .7) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4], color = "lightblue") +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = .8, alpha = .7) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4],
color = "lightblue", lwd = .8, alpha = .7) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = .8, alpha = .7) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4],
color = "lightblue", lwd = .9, alpha = .7) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
p1 <- ggplot(mtcars, aes(wt, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit1$coef[1], slope = fit1$coef[3], color = "red", lwd = .8) +
geom_abline(intercept = fit1$coef[1] + fit1$coef[2],slope = fit1$coef[3] + fit1$coef[4],
color = "lightblue", lwd = .9) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p2 <- ggplot(mtcars, aes(am, wt, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Weight") +
xlab("Transmission Type") + ylab("Weight")
grid.arrange(p1, p2, ncol = 2)
summary(fit2)$coef
p3 <- ggplot(mtcars, aes(hp, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit2$coef[1], slope = fit2$coef[3], color = "red", lwd = .8) +
geom_abline(intercept = fit2$coef[1] + fit2$coef[2],slope = fit2$coef[3],
color = "lightblue", lwd = .9) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p3 <- ggplot(mtcars, aes(hp, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit2$coef[1], slope = fit2$coef[3], color = "red", lwd = .8) +
geom_abline(intercept = fit2$coef[1] + fit2$coef[2],slope = fit2$coef[3],
color = "lightblue", lwd = .9) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p4 <- ggplot(mtcars, aes(am, hp, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Horse Power") +
xlab("Transmission Type") + ylab("Horse Power")
grid.arrange(p1, p2, ncol = 2)
p3 <- ggplot(mtcars, aes(hp, mpg)) + geom_point(aes(color = am)) + theme_bw() +
geom_abline(intercept = fit2$coef[1], slope = fit2$coef[3], color = "red", lwd = .8) +
geom_abline(intercept = fit2$coef[1] + fit2$coef[2],slope = fit2$coef[3],
color = "lightblue", lwd = .9) +
scale_color_discrete(name = "Transmission", labels = c("Automatic", "Manual"))
p4 <- ggplot(mtcars, aes(am, hp, fill = am)) +
geom_boxplot(alpha = .7) + scale_x_discrete(labels = c("Automatic", "Manual")) +
scale_fill_discrete(name = "Transmission", labels = c("Automatic", "Manual")) +
geom_jitter(aes(color = cyl), alpha = 1, size = 3) +
scale_color_discrete(name = "Cylinders\nNumber") + theme_bw() +
ggtitle("Transmission Type versus Horse Power") +
xlab("Transmission Type") + ylab("Horse Power")
grid.arrange(p3, p4, ncol = 2)
anova(lm(mpg ~ am, data = mtcars))
?anova
install.packages("kntir")
install.packages("knitr")
setwd("./Desktop/")
setwd("C:/Users/Yinsen/Desktop/")
load("./rlist.RData")
idx <- c(1:96)
p <- rep(c(.01, .1, .2, .4, .8, .99), each = 16)
iter <- rep(c(1, 2, 5, 10, 15, 20, 25, 50), 12)
length(iter)
seed <- 2000 + rep(c(1:12), each = 8)
length(seed)
rm(list = ls())
load("./rlist.RData")
idx <- c(1:96)
p <- rep(c(.01, .1, .2, .4, .8, .99), each = 16)
iter <- rep(c(1, 2, 5, 10, 15, 20, 25, 50), 12)
seed <- 2000 + rep(c(1:12), each = 8)
tr.acc <- sapply(rlist, function(i) sum(diag(i$train)) / sum(i$train))
tt.acc <- sapply(rlist, function(i) sum(diag(i$test)) / sum(i$test))
time <- sapply(rlist, function(i) i$time)
time
tr.acc
all.tr <- data.frame(step = step, acc = tr.acc, type = "train")
all.tt <- data.frame(step = step, acc = tt.acc, type = "test")
p
iter
tr.acc <- sapply(rlist, function(i) sum(diag(i$train)) / sum(i$train))
tr.acc
length(tr.acc)
all.tr <- data.frame(p = p, iter = iter, acc = tr.acc, type = "train")
all.tt <- data.frame(p = p, iter = iter, acc = tt.acc, type = "test")
all.tr
all.tr <- data.frame(p = p * 100, iter = iter, acc = tr.acc, type = "train")
all.tt <- data.frame(p = p * 100, iter = iter, acc = tt.acc, type = "test")
all.tr
all.time <- data.frame(p = p * 100, iter = iter, time = time)
all.time
all.res <- rbind(all.tr, all.tt)
View(res)
View(all.res)
all.res$iter <- as.factor(all.res$iter)
View(all.res)
all.p <- ddply(all.res, .(p, iter, type), summarize, sd = sd(acc), mean = mean(acc), se = sd(acc)/sqrt(length(acc)), count = length(acc))
library(ddply)
library(plyr)
all.p <- ddply(all.res, .(p, iter, type), summarize, sd = sd(acc), mean = mean(acc), se = sd(acc)/sqrt(length(acc)), count = length(acc))
all.time.p <- ddply(all.time, .(p, iter), summarize, sd = sd(time), mean = mean(time), se = sd(time) / sqrt(length(time)), count = length(time))
all.p
View(all.p)
View(all.time.p)
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
theme_bw() +
ggtitle(paste0(title, " on 249 features (rept num = ", unique(all.p$count), ")")) +
xlab("Iteration Number") +
ylab("Overall Accuracy")
library(ggplot2)
write.csv(all.p,"omp249.csv")
write.csv(all.time.p, "omp249time.csv")
library(ggplot2)
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
theme_bw() +
ggtitle(paste0(title, " on 249 features (rept num = ", unique(all.p$count), ")")) +
xlab("Iteration Number") +
ylab("Overall Accuracy")
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
theme_bw() +
ggtitle(paste0(title, " on 249 features (rept num = ", unique(all.p$count), ")")) +
xlab("Iteration Number") +
ylab("Overall Accuracy")
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
theme_bw()
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_grid(. ~ iter) +
theme_bw()
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(. ~ iter) +
theme_bw()
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(. ~ iter, nrow = 2) +
theme_bw()
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw()
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw() +
ggtitle("Training Size versus Overall Accuarcy") +
xlab("Pecentage %") + ylab("Overall Accuracy")
all.res$iter <- as.factor(paste("Itera:",all.res$iter))
all.p <- ddply(all.res, .(p, iter, type), summarize, sd = sd(acc), mean = mean(acc), se = sd(acc)/sqrt(length(acc)), count = length(acc))
all.time.p <- ddply(all.time, .(p, iter), summarize, sd = sd(time), mean = mean(time), se = sd(time) / sqrt(length(time)), count = length(time))
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw() +
ggtitle("Training Size versus Overall Accuarcy") +
xlab("Pecentage %") + ylab("Overall Accuracy")
load("./rlist.RData")
p <- rep(c(.01, .1, .2, .4, .8, .99), each = 16)
iter <- rep(c(1, 2, 5, 10, 15, 20, 25, 50), 12)
tr.acc <- sapply(rlist, function(i) sum(diag(i$train)) / sum(i$train))
tt.acc <- sapply(rlist, function(i) sum(diag(i$test)) / sum(i$test))
time <- sapply(rlist, function(i) i$time)
all.tr <- data.frame(p = p * 100, iter = iter, acc = tr.acc, type = "train")
all.tt <- data.frame(p = p * 100, iter = iter, acc = tt.acc, type = "test")
all.time <- data.frame(p = p * 100, iter = iter, time = time)
all.res <- rbind(all.tr, all.tt)
all.res$iter <- as.factor(all.res$iter)
all.p <- ddply(all.res, .(p, iter, type), summarize, sd = sd(acc), mean = mean(acc), se = sd(acc)/sqrt(length(acc)), count = length(acc))
all.time.p <- ddply(all.time, .(p, iter), summarize, sd = sd(time), mean = mean(time), se = sd(time) / sqrt(length(time)), count = length(time))
# write.csv(all.p,"omp249.csv")
# write.csv(all.time.p, "omp249time.csv")
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw() +
ggtitle("Training Size versus Overall Accuarcy") +
xlab("Pecentage %") + ylab("Overall Accuracy")
ggplot(all.time.p, aes(x = p, y = mean, color = "red", label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 3, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
theme_bw()
ggplot(all.time.p, aes(x = p, y = mean, color = "red", label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 3, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw()
ggplot(all.time.p, aes(x = p, y = mean, color = "red", label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 3, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
coord_cartesian(xlim = c(-10, 110))
ggplot(all.time.p, aes(x = p, y = mean, color = "red", label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 3, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
coord_cartesian(xlim = c(-20, 120)) +
theme_bw()
ggplot(all.time.p, aes(x = p, y = mean, color = "red", label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 3, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
coord_cartesian(xlim = c(-20, 120)) +
theme_bw() + theme(legend.position="none") +
ggtitle("Average Training Time (249 features)") +
xlab("Pecentage %") +
ylab("Time in Second")
require(rCharts)
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = "Eye", type = "multiBarChart",
data = subset(haireye, Sex == "Male"))
n1
mrp <- read.csv("ssrn-id914160.csv",stringsAsFactors=F)
setwd("C:/Users/Yinsen/Desktop/result/")
library(shiny)
?selectInput
iter <- rep(c(1, 2, 5, 10, 15, 20, 25, 50), 12)
unique(iter)
all.p <- read.csv(all.p,"omp249.csv")
all.time.p <- read.csv(all.time.p, "omp249time.csv")
all.p <- read.csv("omp249.csv")
all.time.p <- read.csv("omp249time.csv")
names(all.p)
str(all.p)
?selectInput
runApp()
runApp()
runApp()
all.p <- read.csv("omp249.csv")
all.time.p <- read.csv("omp249time.csv")
?subset
runApp()
runApp()
runApp()
runApp()
all.p
runApp()
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw() +
ggtitle("Training Size versus Overall Accuarcy (249 features)") +
xlab("Pecentage %") + ylab("Overall Accuracy")
getwd()
setwd("C:/Users/Yinsen/Desktop/")
rm(list = ls())
library(plyr)
library(ggplot2)
load("./rlist.RData")
p <- rep(c(.01, .1, .2, .4, .8, .99), each = 16)
iter <- rep(c(1, 2, 5, 10, 15, 20, 25, 50), 12)
tr.acc <- sapply(rlist, function(i) sum(diag(i$train)) / sum(i$train))
tt.acc <- sapply(rlist, function(i) sum(diag(i$test)) / sum(i$test))
time <- sapply(rlist, function(i) i$time)
all.tr <- data.frame(p = p * 100, iter = iter, acc = tr.acc, type = "train")
all.tt <- data.frame(p = p * 100, iter = iter, acc = tt.acc, type = "test")
all.time <- data.frame(p = p * 100, iter = iter, time = time)
all.res <- rbind(all.tr, all.tt)
all.res$iter <- as.factor(all.res$iter)
all.p <- ddply(all.res, .(p, iter, type), summarize, sd = sd(acc), mean = mean(acc), se = sd(acc)/sqrt(length(acc)), count = length(acc))
all.time.p <- ddply(all.time, .(p, iter), summarize, sd = sd(time), mean = mean(time), se = sd(time) / sqrt(length(time)), count = length(time))
pdf(file = "Accuracy.pdf", width = 20, height= 8)
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw() +
ggtitle("Training Size versus Overall Accuarcy (249 features)") +
xlab("Pecentage %") + ylab("Overall Accuracy")
dev.off()
pdf(file = "Accuracy.pdf", width = 20, height= 9)
ggplot(all.p, aes(x = p, y = mean, colour = type, label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 1, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
theme_bw() +
ggtitle("Training Size versus Overall Accuarcy (249 features)") +
xlab("Pecentage %") + ylab("Overall Accuracy")
dev.off()
pdf(file = "Time.pdf", width = 20, height= 9)
ggplot(all.time.p, aes(x = p, y = mean, color = "red", label = round(mean,2))) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 3, lwd = 0.7) +
geom_line(lwd = 0.7) +
geom_point(size = 2) +
geom_text(size = 4, color = "black", hjust = 1) +
facet_wrap(~ iter, nrow = 2) +
coord_cartesian(xlim = c(-20, 120)) +
theme_bw() + theme(legend.position="none") +
ggtitle("Average Training Time (249 features)") +
xlab("Pecentage %") +
ylab("Time in Second")
dev.off()
setwd("C:/Users/Yinsen/Desktop/traffic_paper/traffic/")
library(slidify)
slidify("./index.Rmd")
library("knitr")
browseURL("./index.html")
library("knitr")
slidify("./index.Rmd")
